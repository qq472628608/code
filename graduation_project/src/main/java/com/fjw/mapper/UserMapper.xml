<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fjw.mapper.UserMapper">
	<resultMap type="User" id="UserResult">
		<id column="id" property="id" jdbcType="BIGINT"/>
		<result column="username" property="username" jdbcType="VARCHAR"/>
		<result column="password" property="password" jdbcType="VARCHAR"/>
		<result column="name" property="name" jdbcType="VARCHAR"/>
		<result column="sex" property="sex" jdbcType="INTEGER"/>
		<result column="phone" property="phone" jdbcType="VARCHAR"/>
		<result column="note" property="note" jdbcType="VARCHAR"/>
		<result column="icon" property="icon" jdbcType="VARCHAR"/>
		<association property="role" column="role_id" select="com.fjw.mapper.RoleMapper.getRole" javaType="Role"></association>
	</resultMap>
	<insert id="saveUser" useGeneratedKeys="true" parameterType="User" keyProperty="id" keyColumn="id">
  		insert into user (username,password,name,sex,phone,note,icon,role_id) values (#{username,jdbcType=VARCHAR},
  		#{password,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},#{sex,jdbcType=INTEGER},#{phone,jdbcType=VARCHAR},
  		#{note,jdbcType=VARCHAR},#{icon,jdbcType=VARCHAR},#{role.id,jdbcType=BIGINT});
  	</insert>
	<delete id="deleteUser" parameterType="java.lang.Long">
		delete from user where id=#{id,jdbcType=BIGINT};
	</delete>
	<select id="getUser" resultMap="UserResult" useCache="true">
		select * from user where id=#{id,jdbcType=BIGINT};
	</select>
	<update id="updateUser" parameterType="User">
		update user set username=#{username,jdbcType=VARCHAR},password=#{password,jdbcType=VARCHAR},
		name=#{name,jdbcType=VARCHAR},sex=#{sex,jdbcType=INTEGER},phone=#{phone,jdbcType=VARCHAR},
		phone=#{phone,jdbcType=VARCHAR},note=#{note,jdbcType=VARCHAR},icon=#{icon,jdbcType=VARCHAR},role_id = #{role.id,jdbcType=BIGINT} 
		where id=#{id,jdbcType=BIGINT}
	</update>
	<select id="listUser" resultMap="UserResult">
		select * from user;
	</select>
	<select id="queryUser" resultMap="UserResult" parameterType="UserQuery">
		select * from user u join role r on u.role_id = r.id  where 1=1
			<if test='sex != null and sex != 3'>
				and u.sex = #{sex,jdbcType=INTEGER}
			</if>
			<if test='username != null and username != ""'>
				and u.username = #{username,jdbcType=VARCHAR}
			</if>
			<if test='phone != null and phone != ""'>
				and u.phone = #{phone,jdbcType=VARCHAR}
			</if>
			<if test='roleName != null and roleName != ""'>
				and r.name = #{roleName,jdbcType=VARCHAR}
			</if>
	</select>
	<select id="getCount" resultType="java.lang.Integer" parameterType="UserQuery">
		select count(*) from user u join role r on u.role_id = r.id  where 1=1
			<if test='sex != null and sex != 3'>
				and u.sex = #{sex,jdbcType=INTEGER}				
			</if>
			<if test='username != null and username != ""'>
				and u.username = #{username,jdbcType=VARCHAR}
			</if>
			<if test='phone != null and phone != ""'>
				and u.phone = #{phone,jdbcType=VARCHAR}
			</if>
			<if test='roleName != null and roleName != ""'>
				and r.name = #{roleName,jdbcType=VARCHAR}
			</if>
	</select>
	<select id="getUserByUsername" parameterType="java.lang.String" resultMap="UserResult" useCache="false">
		select * from user where username = #{username,jdbcType=VARCHAR};
	</select>
	<delete id="batchDelete" parameterType="java.util.List">
		delete from user where 1 > 2 or id in 
		<foreach collection="ids" item="item" open="(" separator="," close=")">
			#{item,jdbcType=BIGINT}
		</foreach>
	</delete>
</mapper>
